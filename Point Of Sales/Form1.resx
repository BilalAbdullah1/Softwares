<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4Y87taDIywAAAABJRU5ErkJggg==
</value>
  </data>
</root>